package day_02;

public class Operator_07 {

	public static void main(String[] args) {

		// 비트연산자
		// 정수에만 사용
		// 비트연산자 &(AND)

		int n1 = 10;
		int n2 = 5;
		int r;

		// 좌항과 우항에 대해서 각 비트를 비교하여
		// 모두 1인경우 1을 반환하는 연산자

		// 		16 8 4 2 1
		// n1 -> 0 1 0 1 0
		// n2 -> 0 0 1 0 1
		// & - > 0 0 0 0 0
		r = n1 & n2;
		System.out.printf("%d & %d = %d\n", n1, n2, r);

		// OR (|)
		// 좌항과 우항에 대해서 각 비트를 비교하여
		// 하나 1인경우 1을 반환하는 연산자

		// 		16 8 4 2 1
		// n1 -> 0 1 0 1 0
		// n2 -> 0 0 1 0 1
		// & - > 0 1 1 1 1
		r = n1 | n2;
		System.out.printf("%d & %d = %d\n", n1, n2, r);

		// XOR (^)
		// 좌항과 우항에 대해서 각 비트를 비교하여
		// 서로다른값을 가지는 경우 1을 반환하는 연산자
		// 비트 1 비트 2 결과
		// 0 0 0
		// 0 1 1
		// 1 0 1
		// 1 1 1
		r = n1 ^ n2;
		System.out.printf("%d & %d = %d\n", n1, n2, r);

		// NOT (~)
		// 우항의 각 비트를 부정한 결과를 반환
		// 비트가 0인 경우 1, 1인경우 0을 반환하는 연산자

		// 		16 8 4 2 1
		// n1 -> 0 1 0 1 0
		// ~n1 > 1 0 1 0 1
		// n2 -> 0 0 1 0 1
		// ~n2 > 1 1 0 1 0
		// & - > 0 0 1 0 1
		r = ~n1 & ~n2;
		System.out.printf("%d & %d = %d\n", n1, n2, r);

	}

}