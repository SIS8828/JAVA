// 주석작성방법
// 주석 :설명문
// 소스 코드에 대한설명을 작성하는 경우 사용
// 주석문은 컴파일시 제외가 되어 실행에 영향을 주지 않음
// // : 1줄 짜리 주석
// /* */ : 여러줄의 주석을 작성하는 경우에 사용
/*
여
러
인
*/
// 자바의 문법
// 모든 소스 코드들은 클래스 내부에 작성됩니다. 
// 클래스 작성방법
// class 클래스명 { }
// 크래스의 이름은 식별자라고 호칭하며
// 사용자가 직접 정의합니다. 
// 첫글자는 반드시 대문자로 작성합니다.
// 여러단어가 조합된 경우 두번째 단어의 시작도 대문자로 작성
import java.lang.*;

class HelloWorld {}

// 자동으로 추가된 코드


// 특정 java 파일은 반드시 하나의  public class를 포함합니다.
// public class의 이름은 반드시 파일명과 동일해야된다. 

public class Hello { // Hello 클래스의 시작
	
	// 자바 언어는 블럭 구조를 지향하는 언어
	// 특정 영역을 지정하는 경우 중괄호로 시작하여 중괄호로 끝
	//{~~~}
	
	// main 메소드의 저으이
	// 자바 프로그램의 진입점(시작지점)
	// 자바 프로그램은 main 메소드의 첫번째 코드부터 싲ㄱ하여
	// main 메소드가 종료될 때까지 실행됩니다. 
	// main 메소드는 반드시
	// public static void main(String [] args)로 정의 해야합니다. 
	public static void main(String [] args){
		
		
		// System 클래스
		// 자바에서 제공하는 기본 클래스
		// 기본출력(모니터), 기본 입력 기능(키보드)을 제공
		// 기본출력 : System.out, 기본입력 : System.in
		
		// 접근연산자 Dot(.)
		// 좌항의 요소에 접근할 수 있는 연산자
		//.out : System 클래스가 가지고 있는 out
		// out.println() : out 객체가 가지고 있는 println 메소드
		
		// System.out : 기본 출력 기능을 제공하는 객체
		// 객체 : 특정 정보/ 기능을 제공할 수 있는 대상
		// System.out.println 메소드
		// 매개변수를 콘솔에 출력하고 자동으로 개행하는 메소드
		// 매개변수 : 메소드의 실행 시 전달되는 값(문자열 또는 숫자, 객체)

		// ; : 실행문의 종료를 알리는 문자
		// 모든 실행문은 세미콜론으로 마무리되어야한다. 
		System.out.println("Hello Java~!");

	} // 프로그램의 종료 지점
} // Hello 클래스의 종료